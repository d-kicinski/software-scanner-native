apply plugin: 'com.android.library'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 28
        targetSdkVersion 30
        versionCode 1
        versionName "0.2.1"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            debug {
                packagingOptions {
                    doNotStrip '**/*.so'  // controlled by OpenCV CMake scripts
                }
            }
            release {
                packagingOptions {
                    doNotStrip '**/*.so'  // controlled by OpenCV CMake scripts
                }
            }
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'com.github.d-kicinski:opencv-android:v4.4.0'

    androidTestImplementation 'com.android.support.test:runner:1.0.2'
}

//  hack to use jitpack
task downloadZipFile(type: Download) {
    src 'https://github.com/d-kicinski/software-scanner-native/releases/download/v0.2.1/jniLibs.zip'
    dest new File(buildDir, 'jniLibs.zip')
    overwrite false
}

task downloadAndUnzipFile(dependsOn: downloadZipFile, type: Copy) {
    from zipTree(downloadZipFile.dest)
    into 'src/main/'
}
preBuild.dependsOn downloadAndUnzipFile
